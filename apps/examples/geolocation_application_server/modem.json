[
    {
        "id": "348ffbdd.1c23a4",
        "type": "tab",
        "label": "Modem",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4204a1dc.b5cfe",
        "type": "http request",
        "z": "348ffbdd.1c23a4",
        "name": "Query LoRa Cloud Device & Application Services",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 750,
        "y": 1100,
        "wires": [
            [
                "f939b303.5b69e"
            ]
        ]
    },
    {
        "id": "f939b303.5b69e",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "links": [
            "baa45081.65a3b",
            "1caa2da1.b4e51a"
        ],
        "x": 975,
        "y": 1100,
        "wires": []
    },
    {
        "id": "baa45081.65a3b",
        "type": "link in",
        "z": "348ffbdd.1c23a4",
        "name": "To LoRa Cloud Device & Application Services parser",
        "links": [
            "f939b303.5b69e",
            "ed4fc504.88425"
        ],
        "x": 235,
        "y": 1260,
        "wires": [
            [
                "95f885b1.0f631"
            ]
        ]
    },
    {
        "id": "415ce353.9b39cc",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "_________________________      Device & Application Services      _________________________",
        "info": "",
        "x": 750,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4ce62231.050b74",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "_________________________      Network Server Connexion      _________________________",
        "info": "",
        "x": 700,
        "y": 420,
        "wires": []
    },
    {
        "id": "f9439f8b.fc42b8",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "_________________________      CONFIG      _________________________",
        "info": "Demo AS code v1.4.0\n\n---\n\nv1.4.0\nAdd LoRa Cloud Geolocation token and URL parameters\n\nv1.3.0\nAdd Network Server storage\nFix network server naming\n\nRename LoRa Cloud Devices & Application Services\n\nv1.2.0\nAdd Downlink Generator block\nChange DAS API usage from /uplink/send to /device/send\n\nv1.1.0\nUse Wi-Fi DAS\n\nv1.0.1\nUpdate license\n\nv1.0.0\nInital release",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "d5a89476.fef33",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "License",
        "info": "Revised BSD License\nCopyright Semtech Corporation 2020. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n* Neither the name of the Semtech corporation nor the\n  names of its contributors may be used to endorse or promote products\n  derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL SEMTECH S.A. BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "x": 1170,
        "y": 120,
        "wires": []
    },
    {
        "id": "4a3245a6.fb9a04",
        "type": "mqtt in",
        "z": "348ffbdd.1c23a4",
        "name": "TTN v2 - Uplinks",
        "topic": "+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "2fa445da.30cd7a"
            ]
        ]
    },
    {
        "id": "2e0871f.4d0780e",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "LoRa Cloud Device & Application Services - Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 910,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ebc39354.f6b378",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "LoRa Cloud Device & Application Services - Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 910,
        "y": 1180,
        "wires": []
    },
    {
        "id": "786390a0.66b1b",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "LoRa Cloud Device & Application Services - Stream",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 920,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f5c2dfd.d5c5ca",
        "type": "mqtt out",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "",
        "x": 830,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5440c72.95d3438",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Get devices information from LoRa Cloud Device & Application Services",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2420,
        "wires": [
            [
                "daf9378e.7b287"
            ]
        ]
    },
    {
        "id": "daf9378e.7b287",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "/api/v1/device/info",
        "func": "var api = 'api/v1/device/info';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 2420,
        "wires": [
            [
                "9a5da7e1.0d1a7"
            ]
        ]
    },
    {
        "id": "af7b981e.495a68",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "device/info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1170,
        "y": 2420,
        "wires": []
    },
    {
        "id": "9a5da7e1.0d1a7",
        "type": "http request",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 890,
        "y": 2420,
        "wires": [
            [
                "f22b15f0.c2687"
            ]
        ]
    },
    {
        "id": "f22b15f0.c2687",
        "type": "json",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1030,
        "y": 2420,
        "wires": [
            [
                "af7b981e.495a68"
            ]
        ]
    },
    {
        "id": "4b766149.e23ab8",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "_________________________      Direct API calls      _________________________",
        "info": "",
        "x": 700,
        "y": 2360,
        "wires": []
    },
    {
        "id": "92be7a1e.ee12b",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Send reset request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"RESET\",\"param\":3}]",
        "payloadType": "json",
        "x": 350,
        "y": 2480,
        "wires": [
            [
                "a69dcdc5.c107a"
            ]
        ]
    },
    {
        "id": "a69dcdc5.c107a",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "/api/v1/requests/set",
        "func": "var api = 'api/v1/requests/set';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n   'requests': msg.payload,\n   'upcount': 1,\n   'updelay': 20,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 2540,
        "wires": [
            [
                "430c9a53.a632ec"
            ]
        ]
    },
    {
        "id": "c3f6f67c.c2aa6",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 1170,
        "y": 2540,
        "wires": []
    },
    {
        "id": "430c9a53.a632ec",
        "type": "http request",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 890,
        "y": 2540,
        "wires": [
            [
                "c22e4dc4.b50e48"
            ]
        ]
    },
    {
        "id": "c22e4dc4.b50e48",
        "type": "json",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1030,
        "y": 2540,
        "wires": [
            [
                "c3f6f67c.c2aa6"
            ]
        ]
    },
    {
        "id": "d4de71dd.89ef",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Send rejoin request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"REJOIN\"}]",
        "payloadType": "json",
        "x": 350,
        "y": 2520,
        "wires": [
            [
                "a69dcdc5.c107a"
            ]
        ]
    },
    {
        "id": "31dd0d31.75c0aa",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Update all info from modem",
        "props": [
            {
                "p": "payload",
                "v": "[{\"type\":\"GETINFO\",\"param\":[\"appstatus\",\"uptime\",\"signal\",\"session\",\"voltage\",\"interval\",\"rxtime\",\"firmware\",\"region\",\"temp\",\"joineui\",\"chipeui\",\"adrmode\",\"charge\",\"status\",\"rstcount\",\"deveui\"]}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"GETINFO\",\"param\":[\"appstatus\",\"uptime\",\"signal\",\"session\",\"voltage\",\"interval\",\"rxtime\",\"firmware\",\"region\",\"temp\",\"joineui\",\"chipeui\",\"adrmode\",\"charge\",\"status\",\"rstcount\",\"deveui\"]}]",
        "payloadType": "json",
        "x": 380,
        "y": 2560,
        "wires": [
            [
                "a69dcdc5.c107a"
            ]
        ]
    },
    {
        "id": "4dce8eaf.09cc38",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "links": [
            "184c96a.c70ca69"
        ],
        "x": 675,
        "y": 640,
        "wires": []
    },
    {
        "id": "184c96a.c70ca69",
        "type": "link in",
        "z": "348ffbdd.1c23a4",
        "name": "To LoRa Cloud Device & Application Services - Joining",
        "links": [
            "4dce8eaf.09cc38",
            "7892faaf.208c44"
        ],
        "x": 295,
        "y": 1100,
        "wires": [
            [
                "66d405e2.55873c"
            ]
        ]
    },
    {
        "id": "66d405e2.55873c",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Set url and credentials",
        "func": "var api = 'api/v1/device/send';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "4204a1dc.b5cfe"
            ]
        ]
    },
    {
        "id": "2fa445da.30cd7a",
        "type": "loracloud-utils-connectors-ttn-v2-in",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "port": "199",
        "x": 570,
        "y": 620,
        "wires": [
            [
                "eb8810a.3bed6f"
            ],
            [
                "4dce8eaf.09cc38"
            ]
        ]
    },
    {
        "id": "b79a9551.41b3f",
        "type": "mqtt in",
        "z": "348ffbdd.1c23a4",
        "name": "TTN v2 - joinReq",
        "topic": "+/devices/+/events/activations",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 360,
        "y": 680,
        "wires": [
            [
                "2fa445da.30cd7a"
            ]
        ]
    },
    {
        "id": "9d3574cc.338f48",
        "type": "mqtt in",
        "z": "348ffbdd.1c23a4",
        "name": "TTN v3 - Uplinks",
        "topic": "v3/+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "acc42664.34b9a8"
            ]
        ]
    },
    {
        "id": "acc42664.34b9a8",
        "type": "loracloud-utils-connectors-ttn-v3-in",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "port": "199",
        "x": 570,
        "y": 820,
        "wires": [
            [
                "eb8810a.3bed6f"
            ],
            [
                "7892faaf.208c44"
            ]
        ]
    },
    {
        "id": "7892faaf.208c44",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "links": [
            "184c96a.c70ca69"
        ],
        "x": 675,
        "y": 840,
        "wires": []
    },
    {
        "id": "90a718e3.cf6888",
        "type": "mqtt in",
        "z": "348ffbdd.1c23a4",
        "name": "TTN v3 - joinReq",
        "topic": "v3/+/devices/+/join",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 360,
        "y": 880,
        "wires": [
            [
                "acc42664.34b9a8"
            ]
        ]
    },
    {
        "id": "28846cf0.90a9fc",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "devEuis",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "[\"00-00-00-00-00-00-00-00\"]",
        "payloadType": "json",
        "x": 580,
        "y": 320,
        "wires": [
            [
                "29519ec0.d040ba"
            ]
        ]
    },
    {
        "id": "29519ec0.d040ba",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Set deveuis",
        "func": "global.set('deveuis', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "79dcac57.8f5194",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Clear requests",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 2660,
        "wires": [
            [
                "ef92cc8a.b5e67"
            ]
        ]
    },
    {
        "id": "ef92cc8a.b5e67",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "/api/v1/requests/clear",
        "func": "var api = 'api/v1/requests/clear';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 2660,
        "wires": [
            [
                "69b3db14.9385a4"
            ]
        ]
    },
    {
        "id": "69b3db14.9385a4",
        "type": "http request",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 890,
        "y": 2660,
        "wires": [
            [
                "1f7fe688.450069"
            ]
        ]
    },
    {
        "id": "1f7fe688.450069",
        "type": "json",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1030,
        "y": 2660,
        "wires": [
            [
                "2c18c52d.0238ca"
            ]
        ]
    },
    {
        "id": "2c18c52d.0238ca",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 1170,
        "y": 2660,
        "wires": []
    },
    {
        "id": "73d55bf.4627324",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "File from LoRa Cloud Device & Application Services",
        "links": [
            "a9fbdb98.a0f53"
        ],
        "x": 735,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c78d2902.4704c",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "Downlink from LoRa Cloud Device & Application Services",
        "links": [
            "2f019093.3918f8"
        ],
        "x": 735,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2f019093.3918f8",
        "type": "link in",
        "z": "348ffbdd.1c23a4",
        "name": "To network server downlink",
        "links": [
            "c78d2902.4704c",
            "c475068b.5bb018"
        ],
        "x": 455,
        "y": 1760,
        "wires": [
            [
                "c68ccce1.0f2218",
                "6a9aa87.da1ffd8"
            ]
        ]
    },
    {
        "id": "e7a6b3ed.5b8958",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "_________________________      Downlink management      _________________________",
        "info": "",
        "x": 760,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9def56e2.ac2f4",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "Stream from LoRa Cloud Device & Application Services",
        "links": [
            "b5df30f7.7e3348"
        ],
        "x": 1175,
        "y": 1260,
        "wires": []
    },
    {
        "id": "95f885b1.0f631",
        "type": "loracloud-utils-connectors-mgs-parser",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "x": 470,
        "y": 1260,
        "wires": [
            [
                "ebc39354.f6b378"
            ],
            [
                "73d55bf.4627324"
            ],
            [
                "786390a0.66b1b",
                "9def56e2.ac2f4"
            ],
            [
                "c78d2902.4704c"
            ],
            [
                "2e0871f.4d0780e"
            ]
        ]
    },
    {
        "id": "c68ccce1.0f2218",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "LoRa Cloud Device & Application Services - Downlink",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 720,
        "y": 1800,
        "wires": []
    },
    {
        "id": "6a9aa87.da1ffd8",
        "type": "loracloud-utils-connectors-downlink-generator",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "x": 660,
        "y": 1760,
        "wires": [
            [
                "f5c2dfd.d5c5ca",
                "adedaa18.7cf38"
            ]
        ]
    },
    {
        "id": "adedaa18.7cf38",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "Downlink Generator output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1720,
        "wires": []
    },
    {
        "id": "e0d93494.f8baa",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Update network server configuration storage",
        "func": "lns_configurations = global.get('lns_configurations') || {};\n\ndeveui = msg.uplink.devEui;\nlns_config = {\n    \"uplink\":msg.uplink,\n    \"topic\": msg.topic,\n};\nlns_configurations[deveui] = lns_config;\n\nglobal.set('lns_configurations', lns_configurations);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "1caa2da1.b4e51a",
        "type": "link in",
        "z": "348ffbdd.1c23a4",
        "name": "To network server storage",
        "links": [
            "f939b303.5b69e"
        ],
        "x": 535,
        "y": 2800,
        "wires": [
            [
                "e0d93494.f8baa"
            ]
        ]
    },
    {
        "id": "71bef9d8.2a6fa8",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Read network server configuration",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 400,
        "y": 2840,
        "wires": [
            [
                "a3151779.3cb638"
            ]
        ]
    },
    {
        "id": "a3151779.3cb638",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Read network server configuration storage",
        "func": "msg.payload = global.get('lns_configurations') || {};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 2840,
        "wires": [
            [
                "ba96f77.6cb2988"
            ]
        ]
    },
    {
        "id": "ba96f77.6cb2988",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "network server configurations",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2840,
        "wires": []
    },
    {
        "id": "a5394965.6b09e8",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Clear network server storage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 410,
        "y": 2880,
        "wires": [
            [
                "65c83954.4dca3"
            ]
        ]
    },
    {
        "id": "65c83954.4dca3",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Clear network server configuration storage",
        "func": "global.set('lns_configurations', {});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "135883ff.35aab4",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "_________________________      Network Server context      _________________________",
        "info": "",
        "x": 690,
        "y": 2740,
        "wires": []
    },
    {
        "id": "eb8c93ad.54f86",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Generate downlink message",
        "func": "deveuis = global.get('deveuis').map(raw => raw.replace(/-/g, \"\"));\nlns_configurations = global.get('lns_configurations') || {};\n\nconst all_out_msg = deveuis.map(deveui =>{\n    return {\n    \"payload\":{\n        \"payload\":msg.payload.payload,\n        \"port\": msg.payload.port,\n    },\n    \"uplink\":lns_configurations[deveui].uplink,\n    \"topic\":lns_configurations[deveui].topic,\n       }\n    }\n);\n\nreturn [all_out_msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1600,
        "wires": [
            [
                "d9471a64.abb3a",
                "c475068b.5bb018"
            ]
        ]
    },
    {
        "id": "d9471a64.abb3a",
        "type": "debug",
        "z": "348ffbdd.1c23a4",
        "name": "Generated downlink message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 1600,
        "wires": []
    },
    {
        "id": "c475068b.5bb018",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "",
        "links": [
            "2f019093.3918f8"
        ],
        "x": 995,
        "y": 1600,
        "wires": []
    },
    {
        "id": "41e7d6ee.88e738",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Example of message to downlink",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"001122\",\"port\":2}",
        "payloadType": "json",
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "eb8c93ad.54f86"
            ]
        ]
    },
    {
        "id": "b7873f1c.e350f",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Turn On LED",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"4F0101\",\"port\":151}",
        "payloadType": "json",
        "x": 410,
        "y": 1640,
        "wires": [
            [
                "eb8c93ad.54f86"
            ]
        ]
    },
    {
        "id": "ffadc893.4e1938",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Turn Off LED",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"4F0100\",\"port\":151}",
        "payloadType": "json",
        "x": 410,
        "y": 1680,
        "wires": [
            [
                "eb8c93ad.54f86"
            ]
        ]
    },
    {
        "id": "98186df7.c883e8",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Modem & Geolocation Services url",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 500,
        "y": 280,
        "wires": [
            [
                "83e37e26.bc9148"
            ]
        ]
    },
    {
        "id": "83e37e26.bc9148",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Modem & Geolocation Services url",
        "func": "global.set('mgs_url', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e53839c7.d2746",
        "type": "inject",
        "z": "348ffbdd.1c23a4",
        "name": "Modem & Geolocation Services server token",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "7d232e05.2c821"
            ]
        ]
    },
    {
        "id": "7d232e05.2c821",
        "type": "function",
        "z": "348ffbdd.1c23a4",
        "name": "Modem & Geolocation Services server token",
        "func": "global.set('mgs_token', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "eb8810a.3bed6f",
        "type": "link out",
        "z": "348ffbdd.1c23a4",
        "name": "Other Ports",
        "links": [
            "384539b7.56d456"
        ],
        "x": 855,
        "y": 620,
        "wires": []
    },
    {
        "id": "ca037929.3d8c78",
        "type": "comment",
        "z": "348ffbdd.1c23a4",
        "name": "To Geolocation Payload Handler",
        "info": "",
        "x": 930,
        "y": 660,
        "wires": []
    }
]
